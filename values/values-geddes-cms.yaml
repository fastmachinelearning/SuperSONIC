triton: 
  # image: fastml/triton-torchgeo:21.02-py3-geometric # run2
  image: fastml/triton-torchgeo:22.07-py3-geometric # run3
  command: ["/bin/sh", "-c"]
  args: 
    - |
      /opt/tritonserver/bin/tritonserver \
      --model-repository=/cvmfs/cms.cern.ch/el9_amd64_gcc12/cms/cmssw/CMSSW_14_1_0_pre7/external/el9_amd64_gcc12/data/RecoBTag/Combined/data/models/ \
      --model-repository=/cvmfs/cms.cern.ch/el9_amd64_gcc12/cms/cmssw/CMSSW_14_1_0_pre7/external/el9_amd64_gcc12/data/RecoEgamma/EgammaPhotonProducers/data/models/ \
      --model-repository=/cvmfs/cms.cern.ch/el9_amd64_gcc12/cms/cmssw/CMSSW_14_1_0_pre7/external/el9_amd64_gcc12/data/RecoTauTag/TrainingFiles/data/DeepTauIdSONIC/ \
      --model-repository=/cvmfs/cms.cern.ch/el9_amd64_gcc12/cms/cmssw/CMSSW_14_1_0_pre7/external/el9_amd64_gcc12/data/RecoMET/METPUSubtraction/data/models/ \
      --allow-gpu-metrics=true \
      --log-verbose=0 \
      --strict-model-config=false \
      --exit-timeout-secs=60
  resources:
    limits: { nvidia.com/mig-1g.5gb: 1, cpu: 2, memory: 16G}
    requests: { nvidia.com/mig-1g.5gb: 1, cpu: 2, memory: 16G}
  service:
    annotations:
      metallb.universe.tf/address-pool: geddes-private-pool
  modelRepository:
    storageType: cvmfs-hostPath
    mountPath: /cvmfs
envoy:
  enabled: true
  resources:
    requests: { cpu: 8, memory: 8Gi }
    limits: { cpu: 16, memory: 8Gi }
  rate_limiter:
    enabled: true
    max_tokens: 5
    tokens_per_fill: 1
    fill_interval: 12s
  service:
    type: LoadBalancer
prometheus:
  url: "prometheus-service.cms.geddes.rcac.purdue.edu"
  port: 8080
  scheme: http
  serverLoadThreshold: 100

autoscaler:
  enabled: true
  minReplicas: 1
  maxReplicas: 4
ingress:
  enabled: false

nodeSelector: {'cms-af-prod': 'true'}

tolerations:
  - key: hub.jupyter.org/dedicated
    operator: Equal
    value: cms-af
    effect: NoSchedule
