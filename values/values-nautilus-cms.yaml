serverLoadThreshold: 100
triton:
  # image: fastml/triton-torchgeo:21.02-py3-geometric # run2
  image: fastml/triton-torchgeo:22.07-py3-geometric # run3
  command: ["/bin/sh", "-c"]
  args: 
    - |
      /opt/tritonserver/bin/tritonserver \
      --model-repository=/cvmfs/cms.cern.ch/el9_amd64_gcc12/cms/cmssw/CMSSW_14_1_0_pre7/external/el9_amd64_gcc12/data/RecoBTag/Combined/data/models/ \
      --log-verbose=0 \
      --strict-model-config=false \
      --exit-timeout-secs=60 \
      --backend-config=onnxruntime,enable-global-threadpool=1
  resources:
    limits: { cpu: 2, memory: 4G, nvidia.com/gpu: 1}
    requests: { cpu: 2, memory: 4G, nvidia.com/gpu: 1}
  modelRepository:
    enabled: true
    storageType: cvmfs-pvc
    mountPath: /cvmfs
  resetReadinessProbe: true
envoy:
  enabled: true
  loadBalancerPolicy: "ROUND_ROBIN"

autoscaler:
  enabled: true
  minReplicas: 1
  maxReplicas: 5

ingress:
  enabled: true
  hostName: sonic-cms.nrp-nautilus.io
  ingressClassName: haproxy
  annotations:
    haproxy-ingress.github.io/cors-enable: "true"
    haproxy-ingress.github.io/backend-protocol: "h2"
    haproxy-ingress.github.io/proxy-body-size: "512m"
    haproxy-ingress.github.io/timeout-client: "5m"
    haproxy-ingress.github.io/timeout-server: "5m"
    haproxy-ingress.github.io/timeout-connect: "5m"
    haproxy-ingress.github.io/timeout-http-request: "5m"
    haproxy-ingress.github.io/timeout-queue: "1m"
    haproxy-ingress.github.io/health-check-interval: "30s"
    haproxy-ingress.github.io/health-check-rise-count: "1"

# nodeSelector:
#   topology.kubernetes.io/zone: ucsd

prometheus:
  enabled: true
  server:
    ingress:
      enabled: true
      hosts:
        - prometheus-cms.nrp-nautilus.io
      tls:
        - hosts:
            - prometheus-cms.nrp-nautilus.io
      ingressClassName: haproxy
      annotations:
        haproxy-ingress.github.io/cors-enable: "true"
        haproxy-ingress.github.io/proxy-body-size: "512m"
        haproxy-ingress.github.io/timeout-http-request: "5m"

grafana:
  enabled: true
  ingress:
    enabled: true
    hosts:
      - grafana-cms.nrp-nautilus.io
    tls:
      - hosts:
          - grafana-cms.nrp-nautilus.io
    ingressClassName: haproxy
    annotations:
      haproxy-ingress.github.io/cors-enable: "true"
      haproxy-ingress.github.io/proxy-body-size: "512m"
      haproxy-ingress.github.io/timeout-http-request: "5m"
  grafana.ini:
    server:
      root_url: https://grafana-cms.nrp-nautilus.io


