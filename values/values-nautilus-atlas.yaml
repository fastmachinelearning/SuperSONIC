serverLoadThreshold: 100

triton:
  name: triton-atlas
  image: milescb/traccc-aas:v1.1
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: nvidia.com/gpu.product
                operator: In
                values:
                  - NVIDIA-A10
                  # - NVIDIA-A40
                  # - NVIDIA-A100-SXM4-80GB
                  # - NVIDIA-L40
                  # - NVIDIA-A100-80GB-PCIe
                  # - NVIDIA-A100-80GB-PCIe-MIG-1g.10gb
                  # - NVIDIA-L4
                  # - NVIDIA-A100-PCIE-40GB
                  # - NVIDIA-GH200-480GB
  command: ["/bin/sh", "-c"]
  args:
    - |
      /opt/tritonserver/bin/tritonserver \
      --model-repository=/traccc-aaS/traccc-aaS/backend/models \
      --log-verbose=1 \
      --exit-on-error=true
  resources:
    limits: { nvidia.com/gpu: 1, cpu: 2, memory: 16G }
    requests: { nvidia.com/gpu: 1, cpu: 2, memory: 16G }
  replicas: 1
  modelRepository:
    enabled: true
    storageType: cvmfs-pvc
    mountPath: /cvmfs

envoy:
  enabled: true
  loadBalancerPolicy: "ROUND_ROBIN"
  ingress:
    enabled: true
    hostName: atlas.nrp-nautilus.io
    ingressClassName: haproxy
    annotations:
      haproxy-ingress.github.io/cors-enable: "true"
      haproxy-ingress.github.io/backend-protocol: "h2"
      haproxy-ingress.github.io/proxy-body-size: "512m"
      haproxy-ingress.github.io/timeout-client: "5m"
      haproxy-ingress.github.io/timeout-server: "5m"
      haproxy-ingress.github.io/timeout-connect: "5m"
      haproxy-ingress.github.io/timeout-http-request: "5m"
      haproxy-ingress.github.io/timeout-queue: "1m"
      haproxy-ingress.github.io/health-check-interval: "30s"
      haproxy-ingress.github.io/health-check-rise-count: "1"

keda:
  enabled: False
  minReplicaCount: 0
  maxReplicaCount: 1

prometheus:
  external:
    enabled: true
    url: "prometheus.nrp-nautilus.io"
    port: 443
    scheme: https

grafana:
  enabled: true
  dashboardsConfigMaps:
    default: traccc-sonic-grafana-default-dashboard
  datasources:
    datasources.yaml:
      datasources:
        - name: prometheus
          type: prometheus
          access: proxy
          isDefault: true
          url: prometheus.nrp-nautilus.io
          jsonData:
            timeInterval: "5s"
            tlsSkipVerify: true
  ingress:
    enabled: true
    hosts:
      - grafana-atlas.nrp-nautilus.io
    tls:
      - hosts:
          - grafana-atlas.nrp-nautilus.io
    ingressClassName: haproxy
    annotations:
      haproxy-ingress.github.io/cors-enable: "true"
      haproxy-ingress.github.io/proxy-body-size: "512m"
      haproxy-ingress.github.io/timeout-http-request: "5m"
  grafana.ini:
    server:
      root_url: https://grafana-atlas.nrp-nautilus.io

metricsCollector:
  enabled: true
  ingress:
    enabled: true
    hosts:
      - metrics-collector-atlas.nrp-nautilus.io
    tls:
      - hosts:
          - metrics-collector-atlas.nrp-nautilus.io
    ingressClassName: haproxy
    annotations:
      haproxy-ingress.github.io/cors-enable: "true"
      haproxy-ingress.github.io/backend-protocol: "http"
      haproxy-ingress.github.io/proxy-body-size: "512m"
      haproxy-ingress.github.io/ssl-redirect: "true"
      haproxy-ingress.github.io/secure-backends: "false"

