{{- if .Values.autoscaler.enabled }}

{{- $scaleUp := .Values.autoscaler.scaleUp | default dict }}
{{- $scaleDown := .Values.autoscaler.scaleDown | default dict }}
{{- $prometheusAddress := printf "%s://%s:%d" .Values.prometheus.scheme .Values.prometheus.url (int .Values.prometheus.port) | quote }}

apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: {{ include "supersonic.name" . }}-keda-so
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ include "supersonic.name" . }}
    app.kubernetes.io/component: keda
spec:
  scaleTargetRef:
    name: {{ include "supersonic.tritonName" . }}
    kind: Deployment
  pollingInterval: 30
  cooldownPeriod: 120
{{- if (eq .Values.autoscaler.zeroIdleReplicas true) }}
  idleReplicaCount: 0
{{- end }}
  minReplicaCount: {{ default 1 .Values.autoscaler.minReplicas }}
  maxReplicaCount: {{ default 14 .Values.autoscaler.maxReplicas }}
  advanced:
    horizontalPodAutoscalerConfig:
      behavior:
        scaleDown:
          stabilizationWindowSeconds: {{ default 120 $scaleDown.window }}
          policies:
            - periodSeconds: {{ default 30 $scaleDown.period }}
              type: Pods
              value: {{ default 1 $scaleDown.stepsize }}
        scaleUp:
          stabilizationWindowSeconds: {{ default 120 $scaleUp.window }}
          policies:
            - periodSeconds: {{ default 30 $scaleUp.period }}
              type: Pods
              value: {{ default 1 $scaleUp.stepsize }}

  triggers:
  - type: prometheus
    metricType: Value
    metadata:
      serverAddress: {{ $prometheusAddress }}
      metricName: autoscaler-metric
      threshold: {{ .Values.prometheus.serverLoadThreshold | quote }}
      query: |-
        {{ include "supersonic.defaultMetric" . | nindent 8 }}
---


{{- end }}