{{- if not .Values.prometheus.external }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "supersonic.prometheusName" . }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ include "supersonic.name" . }}
    app.kubernetes.io/component: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ include "supersonic.name" . }}
      app.kubernetes.io/component: prometheus
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ include "supersonic.name" . }}
        app.kubernetes.io/component: prometheus
    spec:
      serviceAccountName: {{ include "supersonic.prometheusName" . }}-sa
      containers:
      - name: prometheus
        image: prom/prometheus:v2.49.1
        args:
          - "--config.file=/etc/prometheus/prometheus.yml"
          - "--storage.tsdb.path=/prometheus"
          - "--web.console.libraries=/usr/share/prometheus/console_libraries"
          - "--web.console.templates=/usr/share/prometheus/consoles"
        ports:
          - containerPort: 9090
            name: http
        volumeMounts:
          - name: prometheus-config
            mountPath: /etc/prometheus
          - name: prometheus-storage
            mountPath: /prometheus
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1
            memory: 1Gi
      volumes:
        - name: prometheus-config
          configMap:
            name: {{ include "supersonic.prometheusName" . }}-config
        - name: prometheus-storage
          emptyDir: {}
      restartPolicy: Always
{{- end }}
