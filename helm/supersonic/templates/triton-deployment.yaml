apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "supersonic.tritonName" . }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ include "supersonic.name" . }}
    app.kubernetes.io/component: triton
spec:
  replicas: {{ .Values.triton.replicas | default 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ include "supersonic.name" . }}
      app.kubernetes.io/component: triton
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ include "supersonic.name" . }}
        app.kubernetes.io/component: triton
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - name: triton-server
        image: {{ .Values.triton.image }}
        resources:
          {{ toYaml .Values.triton.resources | nindent 10 }}
        ports:
        {{- range .Values.triton.service.ports }}
        - name: {{ .name }}
          containerPort: {{ .port }}
          protocol: {{ .protocol }}
        {{- end }}
        volumeMounts:
          {{- if .Values.triton.modelRepository.enabled }}
          - name: model-repository
            mountPath: {{ .Values.triton.modelRepository.mountPath }}
            mountPropagation: HostToContainer
            readOnly: true
          {{- end }}
        command: {{ toYaml .Values.triton.command | nindent 10 }}
        args:  {{ toYaml .Values.triton.args | nindent 10 }}
{{- if not (eq .Values.triton.startupProbe.reset true) }}
        startupProbe:
          initialDelaySeconds: {{ .Values.triton.startupProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.triton.startupProbe.periodSeconds }}
          failureThreshold: {{ .Values.triton.startupProbe.failureThreshold }}
          httpGet:
            path: {{ .Values.triton.startupProbe.httpGet.path }}
            port: {{ .Values.triton.startupProbe.httpGet.port }}
{{- end}}
{{- if not (eq .Values.triton.readinessProbe.reset true) }}
        readinessProbe:
          exec:
            command: {{ toYaml .Values.triton.readinessProbe.command | nindent 12 }}
          initialDelaySeconds: {{ .Values.triton.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.triton.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.triton.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.triton.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.triton.readinessProbe.failureThreshold }}
{{- end }}
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "touch", "/tmp/shutdown;", "sleep 60"]
      volumes:
      {{- if .Values.triton.modelRepository.enabled }}
      - name: model-repository
      {{- if eq .Values.triton.modelRepository.storageType "nfs" }}
        nfs:
          server: {{ .Values.triton.modelRepository.nfs.server }}
          path: {{ .Values.triton.modelRepository.nfs.path }}
      {{- else if eq .Values.triton.modelRepository.storageType "pvc" }}
        persistentVolumeClaim:
          claimName: {{ .Values.triton.modelRepository.pvc.claimName }}
      {{- else if eq .Values.triton.modelRepository.storageType "cvmfs-hostPath" }}
        hostPath: 
          path: /cvmfs
      {{- else if eq .Values.triton.modelRepository.storageType "cvmfs-pvc" }}
        persistentVolumeClaim:
          claimName: cvmfs
          readOnly: true
      {{- end }}
      {{- end }}

{{- if .Values.triton.affinity }}
      affinity: {{ toYaml .Values.triton.affinity | nindent 8}}
{{- end }}

{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | nindent 8 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | nindent 8 }}
{{- end }}
      restartPolicy: Always