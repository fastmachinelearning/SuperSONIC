
servers:
  - triton: 
      name: triton-run2-lb
      image: fastml/triton-torchgeo:21.02-py3-geometric
      command: ["/bin/sh", "-c"]
      args: ["cd /depot/cms/sonic/models &&\ /opt/tritonserver/bin/tritonserver --model-repository=/depot/cms/sonic/models --allow-gpu-metrics=true --log-verbose=0 --strict-model-config=false --exit-timeout-secs=60"]
      resources:
        limits: { nvidia.com/gpu: 1, cpu: 2, memory: 16G}
        requests: { nvidia.com/gpu: 1, cpu: 2, memory: 16G}
      modelRepository:
        storageType: nfs # Options: "pvc", "nfs", "s3"
        mountPath: /depot/cms
        nfs: { server: datadepot.rcac.purdue.edu, path: /depot/cms/ }
    envoy:
      name: triton-run2
      replicas: 1
      image: envoyproxy/envoy:v1.30-latest
      args: ["--config-path", "/etc/envoy/envoy.yaml", "--log-level", "info", "--log-path", "/dev/stdout"]
      resources:
        requests: { cpu: 8, memory: 8Gi }
        limits: { cpu: 16, memory: 8Gi }
      configs:
        envoyConfig: "cfg/envoy.yaml"
        luaConfig: "cfg/envoy-filter.lua"
      loadBalancerPolicy: LEAST_REQUEST
    prometheus:
      url: "prometheus-service.cms.geddes.rcac.purdue.edu"
      port: 8080
      serverAvailabilityMetric: |-
        sum(
          rate(
            label_replace(envoy_http_downstream_rq_time_sum{envoy_http_conn_manager_prefix="ingress_grpc", pod=~"triton-run2.*"}, "pod", "$1", "pod", "(.*)-(.*)-(.*)$")
          [2m:10s])
          /
          rate(
            label_replace(envoy_http_downstream_rq_time_count{envoy_http_conn_manager_prefix="ingress_grpc", pod=~"triton-run2.*"}, "pod", "$1", "pod", "(.*)-(.*)-(.*)$")
          [2m:10s])
        )
      serverAvailabilityThreshold: 20
    autoscaler:
      enabled: True
      minReplicas: 1
      maxReplicas: 9

  - triton: 
      name: triton-yao-lb
      replicas: 1
      image: fastml/triton-torchgeo:22.07-py3-geometric
      command: ["/bin/sh", "-c"]
      args: ["cd /depot/cms/sonic/yao317/models/sonic-models/models_2023 &&\ /opt/tritonserver/bin/tritonserver --model-repository=/depot/cms/sonic/yao317/models/sonic-models/models_2023 --allow-gpu-metrics=true --log-verbose=0 --strict-model-config=false"]
      resources:
        limits: { nvidia.com/gpu: 1, cpu: 2, memory: 16G}
        requests: { nvidia.com/gpu: 1, cpu: 2, memory: 16G}
      modelRepository:
        storageType: nfs # Options: "pvc", "nfs", "s3"
        mountPath: /depot/cms
        nfs: { server: datadepot.rcac.purdue.edu, path: /depot/cms/ }
    envoy:
      name: triton-yao
      replicas: 1
      image: envoyproxy/envoy:v1.30-latest
      args: ["--config-path", "/etc/envoy/envoy.yaml", "--log-level", "info", "--log-path", "/dev/stdout"]
      resources:
        requests: { cpu: 8, memory: 8Gi }
        limits: { cpu: 16, memory: 8Gi }
      configs:
        envoyConfig: "cfg/envoy.yaml"
        luaConfig: "cfg/envoy-filter.lua"
      loadBalancerPolicy: LEAST_REQUEST
    prometheus:
      url: "prometheus-service.cms.geddes.rcac.purdue.edu"
      port: 8080
      serverAvailabilityMetric: |-
        sum(
          rate(
            label_replace(envoy_http_downstream_rq_time_sum{envoy_http_conn_manager_prefix="ingress_grpc", pod=~"triton-yao.*"}, "pod", "$1", "pod", "(.*)-(.*)-(.*)$")
          [2m:10s])
          /
          rate(
            label_replace(envoy_http_downstream_rq_time_count{envoy_http_conn_manager_prefix="ingress_grpc", pod=~"triton-yao.*"}, "pod", "$1", "pod", "(.*)-(.*)-(.*)$")
          [2m:10s])
        )
      serverAvailabilityThreshold: 20
    autoscaler:
      enabled: True
      minReplicas: 1
      maxReplicas: 9


common:
  # service configuration is currently same for all setups
  tritonService:
    labels:
      scrape_metrics: "true"
    annotations:
      metallb.universe.tf/address-pool: geddes-private-pool
    ports:
      - { name: http, port: 8000, targetPort: 8000, protocol: TCP }
      - { name: grpc, port: 8001, targetPort: 8001, protocol: TCP }
      - { name: metrics, port: 8002, targetPort: 8002, protocol: TCP }

  envoyService:
    labels:
      envoy: "true"
    ports:
      - { name: grpc, port: 8001, targetPort: 8001 }
      - { name: admin, port: 9901, targetPort: 9901 }

  nodeSelector: {'cms-af-prod': 'true'}

  tolerations:
    - key: hub.jupyter.org/dedicated
      operator: Equal
      value: cms-af
      effect: NoSchedule

  affinity: {}


# For Run3:
# Triton image:  fastml/triton-torchgeo:22.07-py3-geometric
# Models: /depot/cms/sonic/yao317/models/sonic-models/models_2023
